{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["(function () {\r\n\r\n  \r\n\r\n  var assign = require('object-assign');\r\n  var vary = require('vary');\r\n\r\n  var defaults = {\r\n    origin: '*',\r\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\r\n    preflightContinue: false,\r\n    optionsSuccessStatus: 204\r\n  };\r\n\r\n  function isString(s) {\r\n    return typeof s === 'string' || s instanceof String;\r\n  }\r\n\r\n  function isOriginAllowed(origin, allowedOrigin) {\r\n    if (Array.isArray(allowedOrigin)) {\r\n      for (var i = 0; i < allowedOrigin.length; ++i) {\r\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else if (isString(allowedOrigin)) {\r\n      return origin === allowedOrigin;\r\n    } else if (allowedOrigin instanceof RegExp) {\r\n      return allowedOrigin.test(origin);\r\n    } else {\r\n      return !!allowedOrigin;\r\n    }\r\n  }\r\n\r\n  function configureOrigin(options, req) {\r\n    var requestOrigin = req.headers.origin,\r\n      headers = [],\r\n      isAllowed;\r\n\r\n    if (!options.origin || options.origin === '*') {\r\n      // allow any origin\r\n      headers.push([{\r\n        key: 'Access-Control-Allow-Origin',\r\n        value: '*'\r\n      }]);\r\n    } else if (isString(options.origin)) {\r\n      // fixed origin\r\n      headers.push([{\r\n        key: 'Access-Control-Allow-Origin',\r\n        value: options.origin\r\n      }]);\r\n      headers.push([{\r\n        key: 'Vary',\r\n        value: 'Origin'\r\n      }]);\r\n    } else {\r\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\r\n      // reflect origin\r\n      headers.push([{\r\n        key: 'Access-Control-Allow-Origin',\r\n        value: isAllowed ? requestOrigin : false\r\n      }]);\r\n      headers.push([{\r\n        key: 'Vary',\r\n        value: 'Origin'\r\n      }]);\r\n    }\r\n\r\n    return headers;\r\n  }\r\n\r\n  function configureMethods(options) {\r\n    var methods = options.methods;\r\n    if (methods.join) {\r\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\r\n    }\r\n    return {\r\n      key: 'Access-Control-Allow-Methods',\r\n      value: methods\r\n    };\r\n  }\r\n\r\n  function configureCredentials(options) {\r\n    if (options.credentials === true) {\r\n      return {\r\n        key: 'Access-Control-Allow-Credentials',\r\n        value: 'true'\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function configureAllowedHeaders(options, req) {\r\n    var allowedHeaders = options.allowedHeaders || options.headers;\r\n    var headers = [];\r\n\r\n    if (!allowedHeaders) {\r\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\r\n      headers.push([{\r\n        key: 'Vary',\r\n        value: 'Access-Control-Request-Headers'\r\n      }]);\r\n    } else if (allowedHeaders.join) {\r\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\r\n    }\r\n    if (allowedHeaders && allowedHeaders.length) {\r\n      headers.push([{\r\n        key: 'Access-Control-Allow-Headers',\r\n        value: allowedHeaders\r\n      }]);\r\n    }\r\n\r\n    return headers;\r\n  }\r\n\r\n  function configureExposedHeaders(options) {\r\n    var headers = options.exposedHeaders;\r\n    if (!headers) {\r\n      return null;\r\n    } else if (headers.join) {\r\n      headers = headers.join(','); // .headers is an array, so turn it into a string\r\n    }\r\n    if (headers && headers.length) {\r\n      return {\r\n        key: 'Access-Control-Expose-Headers',\r\n        value: headers\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function configureMaxAge(options) {\r\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\r\n    if (maxAge && maxAge.length) {\r\n      return {\r\n        key: 'Access-Control-Max-Age',\r\n        value: maxAge\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function applyHeaders(headers, res) {\r\n    for (var i = 0, n = headers.length; i < n; i++) {\r\n      var header = headers[i];\r\n      if (header) {\r\n        if (Array.isArray(header)) {\r\n          applyHeaders(header, res);\r\n        } else if (header.key === 'Vary' && header.value) {\r\n          vary(res, header.value);\r\n        } else if (header.value) {\r\n          res.setHeader(header.key, header.value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function cors(options, req, res, next) {\r\n    var headers = [],\r\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\r\n\r\n    if (method === 'OPTIONS') {\r\n      // preflight\r\n      headers.push(configureOrigin(options, req));\r\n      headers.push(configureCredentials(options, req));\r\n      headers.push(configureMethods(options, req));\r\n      headers.push(configureAllowedHeaders(options, req));\r\n      headers.push(configureMaxAge(options, req));\r\n      headers.push(configureExposedHeaders(options, req));\r\n      applyHeaders(headers, res);\r\n\r\n      if (options.preflightContinue) {\r\n        next();\r\n      } else {\r\n        // Safari (and potentially other browsers) need content-length 0,\r\n        //   for 204 or they just hang waiting for a body\r\n        res.statusCode = options.optionsSuccessStatus;\r\n        res.setHeader('Content-Length', '0');\r\n        res.end();\r\n      }\r\n    } else {\r\n      // actual response\r\n      headers.push(configureOrigin(options, req));\r\n      headers.push(configureCredentials(options, req));\r\n      headers.push(configureExposedHeaders(options, req));\r\n      applyHeaders(headers, res);\r\n      next();\r\n    }\r\n  }\r\n\r\n  function middlewareWrapper(o) {\r\n    // if options are static (either via defaults or custom options passed in), wrap in a function\r\n    var optionsCallback = null;\r\n    if (typeof o === 'function') {\r\n      optionsCallback = o;\r\n    } else {\r\n      optionsCallback = function (req, cb) {\r\n        cb(null, o);\r\n      };\r\n    }\r\n\r\n    return function corsMiddleware(req, res, next) {\r\n      optionsCallback(req, function (err, options) {\r\n        if (err) {\r\n          next(err);\r\n        } else {\r\n          var corsOptions = assign({}, defaults, options);\r\n          var originCallback = null;\r\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\r\n            originCallback = corsOptions.origin;\r\n          } else if (corsOptions.origin) {\r\n            originCallback = function (origin, cb) {\r\n              cb(null, corsOptions.origin);\r\n            };\r\n          }\r\n\r\n          if (originCallback) {\r\n            originCallback(req.headers.origin, function (err2, origin) {\r\n              if (err2 || !origin) {\r\n                next(err2);\r\n              } else {\r\n                corsOptions.origin = origin;\r\n                cors(corsOptions, req, res, next);\r\n              }\r\n            });\r\n          } else {\r\n            next();\r\n          }\r\n        }\r\n      });\r\n    };\r\n  }\r\n\r\n  // can pass either an options hash, an options delegate, or nothing\r\n  module.exports = middlewareWrapper;\r\n\r\n}());\r\n"]}